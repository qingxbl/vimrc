snippet #!
#!/usr/bin/env lua
${VISUAL}$0
endsnippet

snippet local
local ${1:x} = ${VISUAL}${0}
endsnippet

snippet fun
function ${1:fname}(${2:...})
	${VISUAL}${0}
end
endsnippet

snippet for
for ${1:i} = ${2:1}, ${3:10} do
	${VISUAL}${0}
end
endsnippet

snippet forp
for ${1:k}, ${2:v} in pairs(${3:table}) do
	${VISUAL}${0}
end
endsnippet

snippet fori
for ${1:i},${2:v} in ipairs(${3:table}) do
	${VISUAL}${0}
end
endsnippet

snippet mod
local ${1:M} = {}

${VISUAL}${0}

return $1 
endsnippet

snippet class
do ${1:M} -- ${2:Class Description}
local $1 = {}
$1.__index = $1

function $1.new(${1:...})
	local self = {}
	${VISUAL}${0}
	return setmetatable(self, $1)
end

end -- $2
endsnippet

snippet log
	log('${1}', ${2})
endsnippet


snippet logb
	log_block('${1:}', '${2:}(${3})')
	${VISUAL}${0}
	log_end('$1', '$2')
endsnippet

